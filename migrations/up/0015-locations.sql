CREATE TABLE IF NOT EXISTS public.locations (
	id serial NOT NULL,
	coordinates text NOT NULL,
	latitude float4 NOT NULL,
	longitude float4 NOT NULL,
	name text NOT NULL,
	placeId text NULL,
	formatedaddress text NOT NULL,
	address text NULL,
	country text NULL,
	arealevel1 text NULL,
	arealevel2 text NULL,
	arealevel3 text NULL,
	arealevel4 text NULL,
	arealevel5 text NULL,
	status text NULL DEFAULT 'PUBLIC'::text,
	ispublished bool NULL DEFAULT false,
	isduplicated bool NULL DEFAULT false,
	isduplicatedverified bool DEFAULT false,
	locationtype text NOT NULL,
	totalreview int4 NULL DEFAULT 0,
	averagepoint float4 NOT NULL DEFAULT 0,
	updatedaveragepointat timestamptz DEFAULT CURRENT_TIMESTAMP,
	createdat timestamptz DEFAULT CURRENT_TIMESTAMP,
	updatedat timestamptz DEFAULT CURRENT_TIMESTAMP,
	deletedat timestamptz DEFAULT NULL,
	blockedat timestamptz DEFAULT NULL,
	blockmessage text DEFAULT NULL,
	note text NULL,
	userid int4 NOT NULL,
	score float4 NOT NULL DEFAULT 0,
	CONSTRAINT locations_pkey PRIMARY KEY (id)
);
CREATE INDEX IF NOT EXISTS locations_user_id_idx ON public.locations USING btree (userid);
